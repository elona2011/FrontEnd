1.[router-link]="['/recommendedNavigation']" <=> bind-router-link="['/recommendedNavigation']" 

2.中括号将HTML元素或组件的属性绑定到组件模型的某个表达式， 当表达式的值变化时，对应的DOM对象将自动得到更新

3.[ng-style]="{'background-image': 'url(/assets/images/02Recommended/Entertainment.PNG)'}"
自动填补ip及gulpfile中的PATH.dest.dev.all+url后的路径,即生成url(http://127.0.0.1:5555/assets/images/02Recommended/Entertainment.PNG)
实际发现：以下生成的url相同，不知道为什么？
[ng-style]="{'background-image': 'url(assets/images/02Recommended/Entertainment.PNG)'}"
[ng-style]="{'background-image': 'url(/assets/images/02Recommended/Entertainment.PNG)'}"
[ng-style]="{'background-image': 'url(./assets/images/02Recommended/Entertainment.PNG)'}"
[ng-style]="{'background-image': 'url(../assets/images/02Recommended/Entertainment.PNG)'}"

4.router在angular2中是独立模块，需要独立引用才能运行
gulpfile:
lib: ['node_modules/angular2/bundles/angular2.js','node_modules/angular2/bundles/router.dev.js']
index.html:
<script src="lib/router.dev.js"></script>


[ng-style]="{'background-image': 'url('+content.pictureIcon+')', 'background-repeat': 'no-repeat', 'background-size': '100% 100%'}"




Lifecycle可以看作是组件自带的系统事件，在组件运行的关键时间点可添加处理函数，alpha.37改为如下写法请注意。
例：
1.import {OnInit, OnDestroy} from 'angular2/angular2';
2.export class About implements OnInit, OnDestroy {}
3.  onInit(){
    ...
  }

  onDestroy(){
    ...
  }



